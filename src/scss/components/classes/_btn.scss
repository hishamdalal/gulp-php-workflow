@use '../../lib/colors' as color;
@use '../../lib/spacing/mixin' as space;
@use '../../lib/animation/transition' as trans;
@use '../../vars/colors' as var;



.btn {
    display: grid;
    @include color.border($color: 'gray');
    @include color.fg(dark);
    @include color.bg(light);

    cursor: pointer;
    @include space.padding($h: md, $v: xs);
    @include trans.ease($duration: 100ms, $property: (color, background-color));

    // &:hover,
    // &:active {
    //     @include color.fg(light);
    //     @include color.bg(dark);
    // }

    // &:hover {
    //     box-shadow: inset 0 0 3px color.get(dark);
    // }

    // &:active {
    //     box-shadow: inset 0 0 6px color.get(dark);
    // }

    @each $color-name, $color-value in var.$colors {
        //@warn $color-name, $color-value;

        @if $color-name !=transparent {

            // @if $color-name == gray {
            //     $color-name: '#{$color-name}';
            // }

            &.btn-#{$color-name} {
                @include color.bg($color-name);
            }
            &.btn-outline-#{$color-name} {
                @include color.border($color:$color-name);
            }

            // todo: change hover behavior from settings
            &.btn-hover\:#{$color-name}  {

                &:hover,
                &:active {
                    @include color.bg($color-name);
                }
            }
            &.btn-outline-hover\:#{$color-name}  {

                &:hover,
                &:active {
                    @include color.border($color:$color-name);
                }
            }
        }
    }
}