@use "sass:math";
// @use "sass:map";
@use '../lib/helper/maps'; 
@use '../vars/colors' as vars;
@use '../lib/colors/helper';

@mixin root-colors($colors) {
  @each $name, $value in $colors {
    --color-#{"" + $name + ""}: #{helper.hexToRGBString($value)};
    // @for $opacity from 1 through 5 {
    //   --color-#{"" + $name + ""}-opacity-#{"" + $opacity + ""}: #{ rgba( $value, math.div($opacity, 10) ) };
    // }
  }
}

:root {
    color-scheme: light dark;
    @include root-colors(vars.$dark-colors);
}

html:has(#color-scheme-light:checked) {
  @include root-colors(vars.$colors);
}

html:has(#color-scheme-dark:checked) {
  @include root-colors(vars.$dark-colors);
}

html:has(#color-scheme-auto:checked) {
  @media (prefers-color-scheme: light) {
    @include root-colors(vars.$colors);
  }
  @media (prefers-color-scheme: dark) {
    @include root-colors(vars.$dark-colors);
  }
}


body {
  transition: ease-in-out 300ms all;
}
