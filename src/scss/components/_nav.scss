@use '../lib/colors' as color;
// @use '../lib/spacing/function' as space_function;
@use '../lib/spacing' as space;
@use '../lib/spacing/responsive' as r_space;
@use '../lib/animation/transition';
@use '../lib/breakpoints' as breakpoint;

#main-header {
    position: fixed;
    width: 100%;
    
    nav {
        display: grid;
        height: 40px;

        justify-content: space-between;
        @include color.bg(primary-light);
        //grid-template-columns: 3fr 350px 2fr;
        grid-template-columns: auto auto;

        // @include space.padding($md:(h:1.5), $lg:(h:2) );
        @include r_space.padding(
            $all:(v:xxs), 
            $xxs:(h:xs),
            $xs:(h:sm), 
            $md:(h:md), 
            $lg:(h:lg),
            $xl:(h:xl),
            $xxl:(h:xxl),
            $xxxl:(h:xxxl)
        );
        @include breakpoint.multi( 
            $lg:(grid-template-columns:150px auto), 
            $xl:(grid-template-columns:200px auto) 
        ); 
    }
    .logo {
        display: grid;
        margin-block: auto;
        cursor: pointer;
        font-weight: 700;
    }
    .menu {
        display: grid;
        grid-auto-flow: column;
        align-items: center;
        justify-content: flex-end;
        grid-template-columns: auto auto;
        @include breakpoint.more-than(md) {
            grid-template-columns: 350px 350px;
        }
    }
    .items {
        list-style: none;
        margin: 0;
        grid-auto-flow: column;
        grid-auto-columns: min-content;
        justify-items: stretch;
        @include space.gap(xs);
        position: relative;
        display: none;

        @include breakpoint.more-than(md) {
            display: grid;
        }      

        a {
            display: block;
            position: relative;
            @include space.padding($h:md, $v:sm);
            @include color.fg(dark-3);
            z-index: 10;
            // border-bottom: 2px solid color.get(transparency);
            //@include animate.ease($property:(border, color));
            // transition: ease-in-out 1s 0 all;

            &:after {
                content: '';
                position: absolute;
                width: 0px;
                height: 3px;
                z-index: -1;
                @include space.inset($b:-xxs, $l:zero);    
                //@include transition.ease($duration:200ms, $delay:0ms, $property:(width));
                // transition: ease-in-out 200ms height, ease-in-out 200ms 200ms width, 300ms 0ms background-color;
                @include transition.multi( ((ease-in-out 100ms height), (ease-in-out 200ms 200ms width), (300ms 0ms background-color)) );

                @include color.bg(accent);
                // transform-origin: bottom right;
                // transform: scaleX(0);
            }

            @include transition.hover($property:(border, background-color)) {
                //border-bottom: 2px solid color.get(accent);
                @include color.fg(light);
                @include transition.ease($duration:100ms, $delay:200ms, $property:(color));

                &:after {
                    width: 100%;
                    height: calc(100% + 3px);
                    // transform-origin: bottom left;
                    // transform: scaleX(1);
                    @include color.bg(accent);
                    //transition: ease-in-out 200ms width, ease-in-out 200ms 200ms height, 300ms 0ms background-color;
                    @include transition.multi( ((ease-in-out 200ms width), (ease-in-out 100ms 200ms height), (ease-in-out 300ms 0ms background-color)) )
                }
            }

        }

    }

    .tools {
        display: none;
        
        list-style: none;
        @include space.margin($all:zero);
        @include space.padding($v:xs, $h:sm);
        @include space.gap($h:md);
        
        .search-form {
            display: flex;
            
            &, * {
                @include space.margin($all:zero);
                min-height: 100%;
            }
        }
        .search-input {
            border: none;
            border-radius:  1rem 0 0 1rem;
            width: 15ch;
            font-size: 0.93rem;
            //@include space.padding($custom:.2rem);
            @include space.padding($h:sm, $v:zero);
            
            &:focus-within {
                outline: none;
            }
        }
        .search-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: space.fget(lg);
            border-radius:  0 1rem  1rem 0;
            @include color.border($color: dark-3);
            cursor: pointer;
            @include color.bg(dark-3);
            @include color.fg(light-3);
        }
        [class^="icon-"]:before, [class*=" icon-"]:before {
            font-weight: 100%;
        }
        @include breakpoint.more-than(xs) {
            display: flex;
        }

        &.active {
            position: absolute;
            display: grid;
            @include space.inset($r:xl, $top:xs);
            //height: 3.8rem;
            gap: 1rem;
            z-index: 9;
            
            .light-dark-switch {
                min-height: 27px;
            }
        }
    }
    
    .light-dark-switch {
        display: flex;
        @include space.gap($h:sm);
        border-radius: 1.5rem;
        @include color.outline($color:light);
        @include space.padding($v:zero, $h:sm);
        min-height: 100%;
        align-items: center;
        justify-content: center;
        font-size: .93rem;
        //line-height: .7;
        @include color.fg(dark-3);
        input {display: none;}
        label {cursor: pointer;}
        label:hover {@include color.fg(light-3)}

        label:has(input:checked) {
            @include color.fg(light-3)
        }
    }

    .nav-toggle {
        display: block;
        margin-inline-start: auto;
        z-index: 2;
        cursor: pointer;
        // position: relative;
        @include space.padding($all:xs);
        
        @include breakpoint.more-than(md) {
            display: none;
        }


        input {
            display: none;
        }

        &:has(:checked) {
            &:before {
                content: '\e800';
            }
            .mobile-nav {
                visibility: visible;
                inset-inline-end: 0px;
            }
        }
        // &:has(:not(:checked)) {
        //     &:before {
        //         content: '\f0c9';
        //     }
        // }

        .mobile-nav {
            visibility: hidden;
            position: absolute;
            z-index: -1;
            @include color.bg(accent);
            @include space.padding($h:zero, $v:xxl);
            @include breakpoint.multi( 
                $xs:(padding-inline: space.get_one(xs)),
                $sm:(padding-inline: space.get_one(sm))
            ); 
            @include space.inset($t:zero);
            inset-inline-end: -300px;
            min-width: 300px;
            min-height: 100vh;
            @include transition.ease($duration:200ms, $property:(inset-inline-end, visibility));
            opacity: .9;

            ul {
                list-style: none;
                margin: 0;
                padding: 0;
                @include space.margin($t:sm);
            }
            li, a {
                display: grid;
            }
            a {
                @include space.padding($h:md, $v:md);
                @include color.fg(light);
                
                &:focus {
                    @include color.fg(dark);
                    @include color.bg(light);
                }
            }
        }

    }
}

